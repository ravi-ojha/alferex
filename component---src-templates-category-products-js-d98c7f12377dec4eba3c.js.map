{"version":3,"sources":["webpack:///./src/templates/category-products.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Breadcrumb/BreadcrumbDivider.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Breadcrumb/BreadcrumbSection.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Breadcrumb/Breadcrumb.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardDescription.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardHeader.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardMeta.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/Card.js"],"names":["AllProductsTemplate","productCard","product","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","Column","key","node","slug","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_5__","alt","title","src","images","Content","Header","Description","material","render","_this2","this","console","log","props","pageContext","previous","next","allProducts","categoryTitle","renderedCategoryProductList","filter","categorySlug","category","map","_components_Header__WEBPACK_IMPORTED_MODULE_10__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_6__","basic","style","background","semantic_ui_react__WEBPACK_IMPORTED_MODULE_7__","marginBottom","semantic_ui_react__WEBPACK_IMPORTED_MODULE_8__","size","Section","Divider","icon","active","semantic_ui_react__WEBPACK_IMPORTED_MODULE_9__","as","textAlign","className","padding","stackable","columns","_components_Footer__WEBPACK_IMPORTED_MODULE_11__","React","PureComponent","BreadcrumbDivider","children","content","classes","classnames_default","rest","Object","getUnhandledProps","ElementType","getElementType","isNil_default","react_default","extends_default","lib","isNil","Icon","create","defaultProps","objectSpread_default","autoGenerateKey","handledProps","propTypes","factories","Breadcrumb_BreadcrumbDivider","BreadcrumbSection_BreadcrumbSection","_Component","BreadcrumbSection","_getPrototypeOf2","_this","classCallCheck_default","_len","arguments","length","args","Array","_key","possibleConstructorReturn_default","getPrototypeOf_default","call","apply","concat","defineProperty_default","assertThisInitialized_default","_this$props","link","onClick","e","invoke_default","inherits_default","createClass_default","value","_this$props2","href","classNameBuilders","computeElementType","handleClick","react","Breadcrumb","divider","sections","childElements","each_default","section","index","breadcrumbElement","push","__webpack_exports__","CardDescription","Card_CardDescription","CardHeader","Card_CardHeader","CardMeta","Card_CardMeta","CardContent","description","extra","header","meta","val","Card_CardContent","CardGroup","centered","doubling","items","itemsPerRow","itemsJSX","map_default","item","join","Card_Card","Card_CardGroup","__webpack_require__","d","Card","color","fluid","image","raised","Image"],"mappings":"gOAcMA,qKAEJC,YAAc,SAACC,GACb,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAKC,OAAN,CAAaC,IAAKN,EAAQO,KAAKC,MAC7BP,EAAAC,EAAAC,cAACM,EAAA,KAAD,CAAMC,GAAE,GAAKV,EAAQO,KAAKC,MACxBP,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAOC,IAAKb,EAAQO,KAAKO,MAAOC,IAAKf,EAAQO,KAAKS,OAAO,KACzDf,EAAAC,EAAAC,cAACQ,EAAA,EAAKM,QAAN,KACEhB,EAAAC,EAAAC,cAACQ,EAAA,EAAKO,OAAN,KAAclB,EAAQO,KAAKO,OAC3Bb,EAAAC,EAAAC,cAACQ,EAAA,EAAKQ,YAAN,kBAAgCnB,EAAQO,KAAKa,6CAQzDC,OAAA,WAAS,IAAAC,EAAAC,KACPC,QAAQC,IAAIF,KAAKG,OADV,IAECC,EAAgBJ,KAAKG,MAArBC,YACmBA,EAAnBC,SAAmBD,EAATE,KAElBL,QAAQC,IAAIE,EAAYG,aACxB,IAAIC,EAAgB,WAQdC,EANsBL,EAAYG,YAAYG,OAAO,SAACjC,GAC1D,GAAIA,EAAQO,KAAK2B,eAAiBP,EAAYO,aAE5C,OADAH,EAAgB/B,EAAQO,KAAK4B,SACtBnC,IAG6CoC,IAAI,SAACpC,GAC3D,OAAOsB,EAAKvB,YAAYC,KAG1B,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkC,EAAA,EAAed,KAAKG,OACrBzB,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAASC,OAAK,EAACC,MAAO,CAAEC,WAAY,YAClCxC,EAAAC,EAAAC,cAACuC,EAAA,EAAD,KACEzC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAASC,OAAK,EAACC,MAAO,CAAEG,aAAc,MACpC1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAYC,KAAK,SACf5C,EAAAC,EAAAC,cAACyC,EAAA,EAAWE,QAAZ,KAAoB7C,EAAAC,EAAAC,cAACM,EAAA,KAAD,CAAMC,GAAG,KAAT,SACpBT,EAAAC,EAAAC,cAACyC,EAAA,EAAWG,QAAZ,CAAoBC,KAAK,kBACzB/C,EAAAC,EAAAC,cAACyC,EAAA,EAAWE,QAAZ,KAAoB7C,EAAAC,EAAAC,cAACM,EAAA,KAAD,CAAMC,GAAG,aAAT,aACpBT,EAAAC,EAAAC,cAACyC,EAAA,EAAWG,QAAZ,CAAoBC,KAAK,kBACzB/C,EAAAC,EAAAC,cAACyC,EAAA,EAAWE,QAAZ,CAAoBG,QAAM,GAAElB,KAGhC9B,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAASC,OAAK,GACZtC,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAQC,GAAG,KAAKC,UAAU,SAASC,UAAU,+BAA7C,iBAGApD,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAASC,OAAK,EAACC,MAAO,CAAEc,QAAS,UAC/BrD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAQC,GAAG,KAAKE,UAAU,0BACxBpD,EAAAC,EAAAC,cAAA,YAAO4B,IAET9B,EAAAC,EAAAC,cAACuC,EAAA,EAAD,KACEzC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMmD,WAAS,EAACC,QAAS,GACtBxB,QAOb/B,EAAAC,EAAAC,cAACsD,EAAA,EAAD,WAnE0BC,IAAMC,gBAyEzB7D,yNC3Ef,SAAA8D,EAAAlC,GACA,IAAAmC,EAAAnC,EAAAmC,SACAR,EAAA3B,EAAA2B,UACAS,EAAApC,EAAAoC,QACAd,EAAAtB,EAAAsB,KACAe,EAAgBC,IAAE,UAAAX,GAClBY,EAAaC,OAAAC,EAAA,EAAAD,CAAiBN,EAAAlC,GAC9B0C,EAAoBF,OAAAG,EAAA,EAAAH,CAAcN,EAAAlC,GAElC,OAAO4C,IAAMtB,GASNsB,IAAMR,GAMJS,EAAArE,EAAKC,cAAAiE,EAA4BI,IAAQ,GAAGP,EAAA,CACrDZ,UAAAU,IACMU,EAAA,EAAaC,MAAAb,GAAA,IAAAA,GAPRU,EAAArE,EAAKC,cAAAiE,EAA4BI,IAAQ,GAAGP,EAAA,CACvDZ,UAAAU,IACKD,GAXMa,EAAA,EAAIC,OAAA5B,EAAA,CACf6B,aAAoBC,IAAa,GAAGb,EAAA,CACpCZ,UAAAU,IAEAgB,iBAAA,IAeAnB,EAAAoB,aAAA,+CACApB,EAAAqB,UAeC,GACDrB,EAAAgB,OAA2BV,OAAAgB,EAAA,EAAAhB,CAAsBN,EAAA,SAAAZ,GACjD,OACAA,UAGe,IAAAmC,EAAA,yJC9CXC,EAEJ,SAAAC,GAGA,SAAAC,IACA,IAAAC,EAEAC,EAEIC,IAAelE,KAAA+D,GAEnB,QAAAI,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAuEA,EAAAL,EAAaK,IACpFF,EAAAE,GAAAJ,UAAAI,GAgBA,OAbAP,EAAYQ,IAA0BzE,MAAAgE,EAA2BU,IAAeX,IAAAY,KAAAC,MAAAZ,EAAA,CAAAhE,MAAA6E,OAAAP,KAE5EQ,IAAgBC,IAAuBA,IAAsBd,IAAA,gCACjE,IAAAe,EAAAf,EAAA9D,MACA8E,EAAAD,EAAAC,KACAC,EAAAF,EAAAE,QACA,GAAAD,GAAAC,EAAA,YAGIJ,IAAgBC,IAAuBA,IAAsBd,IAAA,uBAAAkB,GACjE,OAAaC,IAAOnB,EAAA9D,MAAA,UAAAgF,EAAAlB,EAAA9D,SAGpB8D,EAuBA,OAjDEoB,IAAStB,EAAAD,GA6BTwB,IAAYvB,EAAA,EACdhF,IAAA,SACAwG,MAAA,WACA,IAAAC,EAAAxF,KAAAG,MACAuB,EAAA8D,EAAA9D,OACAY,EAAAkD,EAAAlD,SACAR,EAAA0D,EAAA1D,UACAS,EAAAiD,EAAAjD,QACAkD,EAAAD,EAAAC,KACAjD,EAAoBC,IAAGE,OAAA+C,EAAA,EAAA/C,CAAUjB,EAAA,oBAAAI,GACjCY,EAAiBC,OAAAC,EAAA,EAAAD,CAAiBoB,EAAA/D,KAAAG,OAClC0C,EAAwBF,OAAAG,EAAA,EAAAH,CAAcoB,EAAA/D,KAAAG,MAAAH,KAAA2F,oBACtC,OAAa3C,EAAArE,EAAKC,cAAAiE,EAA4BI,IAAQ,GAAGP,EAAA,CACzDZ,UAAAU,EACAiD,OACAP,QAAAlF,KAAA4F,cACU1C,EAAA,EAAaC,MAAAb,GAAAC,EAAAD,OAIvByB,EAlDA,CAmDE8B,EAAA,WCzDF,SAAAC,EAAA3F,GACA,IAAAmC,EAAAnC,EAAAmC,SACAR,EAAA3B,EAAA2B,UACAiE,EAAA5F,EAAA4F,QACAtE,EAAAtB,EAAAsB,KACAuE,EAAA7F,EAAA6F,SACA1E,EAAAnB,EAAAmB,KACAkB,EAAgBC,IAAE,KAAAnB,EAAA,aAAAQ,GAClBY,EAAaC,OAAAC,EAAA,EAAAD,CAAiBmD,EAAA3F,GAC9B0C,EAAoBF,OAAAG,EAAA,EAAAH,CAAcmD,EAAA3F,GAElC,IAAO+C,EAAA,EAAaC,MAAAb,GACpB,OAAWU,EAAArE,EAAKC,cAAAiE,EAA4BI,IAAQ,GAAGP,EAAA,CACvDZ,UAAAU,IACKF,GAGL,IAAA2D,EAAA,GAiBA,OAfEC,IAAKF,EAAA,SAAAG,EAAAC,GAEP,IAAAC,EAA4BxC,EAAiBR,OAAA8C,GAG7C,GAFAF,EAAAK,KAAAD,GAEAD,IAAAJ,EAAA3B,OAAA,GACA,IAAAtF,EAAA,GAAA8F,OAAAwB,EAAAtH,IAAA,cAAgE,EAChEkH,EAAAK,KAAyB1C,EAAiBP,OAAA,CAC1Cd,QAAAwD,EACAtE,OACA1C,YAKSiE,EAAArE,EAAKC,cAAAiE,EAA4BI,IAAQ,GAAGP,EAAA,CACrDZ,UAAAU,IACGyD,GDuBHnB,IAAgBjB,EAAiB,yFAGjCA,EAAiBH,UA8BhB,GACDG,EAAiBR,OAAUV,OAAAgB,EAAA,EAAAhB,CAAuBkB,EAAiB,SAAAtB,GACnE,OACAA,UACA0C,MAAA,KCzDAa,EAAArC,aAAA,iEACAqC,EAAApC,UAsBC,GACDoC,EAAAtE,QAAqBoC,EACrBkC,EAAAvE,QAAqBsC,EACN0C,EAAA,gSCpEf,SAAAC,EAAArG,GACA,IAAAmC,EAAAnC,EAAAmC,SACAR,EAAA3B,EAAA2B,UACAS,EAAApC,EAAAoC,QACAV,EAAA1B,EAAA0B,UACAW,EAAgBC,IAAGE,OAAA+C,EAAA,EAAA/C,CAAgBd,GAAA,cAAAC,GACnCY,EAAaC,OAAAC,EAAA,EAAAD,CAAiB6D,EAAArG,GAC9B0C,EAAoBF,OAAAG,EAAA,EAAAH,CAAc6D,EAAArG,GAClC,OAAS6C,EAAArE,EAAKC,cAAAiE,EAA4BI,IAAQ,GAAGP,EAAA,CACrDZ,UAAAU,IACMU,EAAA,EAAaC,MAAAb,GAAAC,EAAAD,GAGnBkE,EAAA/C,aAAA,oDACA+C,EAAA9C,UAeC,GACc,IAAA+C,EAAA,EC9Bf,SAAAC,EAAAvG,GACA,IAAAmC,EAAAnC,EAAAmC,SACAR,EAAA3B,EAAA2B,UACAS,EAAApC,EAAAoC,QACAV,EAAA1B,EAAA0B,UACAW,EAAgBC,IAAGE,OAAA+C,EAAA,EAAA/C,CAAgBd,GAAA,SAAAC,GACnCY,EAAaC,OAAAC,EAAA,EAAAD,CAAiB+D,EAAAvG,GAC9B0C,EAAoBF,OAAAG,EAAA,EAAAH,CAAc+D,EAAAvG,GAClC,OAAS6C,EAAArE,EAAKC,cAAAiE,EAA4BI,IAAQ,GAAGP,EAAA,CACrDZ,UAAAU,IACMU,EAAA,EAAaC,MAAAb,GAAAC,EAAAD,GAGnBoE,EAAAjD,aAAA,oDACAiD,EAAAhD,UAeC,GACc,IAAAiD,EAAA,EC9Bf,SAAAC,EAAAzG,GACA,IAAAmC,EAAAnC,EAAAmC,SACAR,EAAA3B,EAAA2B,UACAS,EAAApC,EAAAoC,QACAV,EAAA1B,EAAA0B,UACAW,EAAgBC,IAAGE,OAAA+C,EAAA,EAAA/C,CAAgBd,GAAA,OAAAC,GACnCY,EAAaC,OAAAC,EAAA,EAAAD,CAAiBiE,EAAAzG,GAC9B0C,EAAoBF,OAAAG,EAAA,EAAAH,CAAciE,EAAAzG,GAClC,OAAS6C,EAAArE,EAAKC,cAAAiE,EAA4BI,IAAQ,GAAGP,EAAA,CACrDZ,UAAAU,IACMU,EAAA,EAAaC,MAAAb,GAAAC,EAAAD,GAGnBsE,EAAAnD,aAAA,oDACAmD,EAAAlD,UAeC,GACc,IAAAmD,EAAA,EC3Bf,SAAAC,EAAA3G,GACA,IAAAmC,EAAAnC,EAAAmC,SACAR,EAAA3B,EAAA2B,UACAS,EAAApC,EAAAoC,QACAwE,EAAA5G,EAAA4G,YACAC,EAAA7G,EAAA6G,MACAC,EAAA9G,EAAA8G,OACAC,EAAA/G,EAAA+G,KACArF,EAAA1B,EAAA0B,UACAW,EAAgBC,IAAGE,OAAA+C,EAAA,EAAA/C,CAAUqE,EAAA,SAAkBrE,OAAA+C,EAAA,EAAA/C,CAAgBd,GAAA,UAAAC,GAC/DY,EAAaC,OAAAC,EAAA,EAAAD,CAAiBmE,EAAA3G,GAC9B0C,EAAoBF,OAAAG,EAAA,EAAAH,CAAcmE,EAAA3G,GAElC,OAAO+C,EAAA,EAAaC,MAAAb,GAMbY,EAAA,EAAaC,MAAAZ,GAMXS,EAAArE,EAAKC,cAAAiE,EAA4BI,IAAQ,GAAGP,EAAA,CACrDZ,UAAAU,IACMG,OAAAgB,EAAA,EAAAhB,CAAgBgE,EAAU,SAAAQ,GAChC,OACA5E,QAAA4E,IAEGF,EAAA,CACHzD,iBAAA,IACMb,OAAAgB,EAAA,EAAAhB,CAAgBkE,EAAQ,SAAAM,GAC9B,OACA5E,QAAA4E,IAEGD,EAAA,CACH1D,iBAAA,IACMb,OAAAgB,EAAA,EAAAhB,CAAgB8D,EAAe,SAAAU,GACrC,OACA5E,QAAA4E,IAEGJ,EAAA,CACHvD,iBAAA,KAxBWR,EAAArE,EAAKC,cAAAiE,EAA4BI,IAAQ,GAAGP,EAAA,CACvDZ,UAAAU,IACKD,GARMS,EAAArE,EAAKC,cAAAiE,EAA4BI,IAAQ,GAAGP,EAAA,CACvDZ,UAAAU,IACKF,GAgCLwE,EAAArD,aAAA,0FACAqD,EAAApD,UA2BC,GACc,IAAA0D,EAAA,oBC9Ef,SAAAC,EAAAlH,GACA,IAAAmH,EAAAnH,EAAAmH,SACAhF,EAAAnC,EAAAmC,SACAR,EAAA3B,EAAA2B,UACAS,EAAApC,EAAAoC,QACAgF,EAAApH,EAAAoH,SACAC,EAAArH,EAAAqH,MACAC,EAAAtH,EAAAsH,YACAzF,EAAA7B,EAAA6B,UACAH,EAAA1B,EAAA0B,UACAW,EAAgBC,IAAE,KAAOE,OAAA+C,EAAA,EAAA/C,CAAU2E,EAAA,YAAwB3E,OAAA+C,EAAA,EAAA/C,CAAU4E,EAAA,YAAwB5E,OAAA+C,EAAA,EAAA/C,CAAUX,EAAA,aAA0BW,OAAA+C,EAAA,EAAA/C,CAAgBd,GAAac,OAAA+C,EAAA,EAAA/C,CAAY8E,GAAA,QAAA3F,GAC1KY,EAAaC,OAAAC,EAAA,EAAAD,CAAiB0E,EAAAlH,GAC9B0C,EAAoBF,OAAAG,EAAA,EAAAH,CAAc0E,EAAAlH,GAElC,IAAO+C,EAAA,EAAaC,MAAAb,GACpB,OAAWU,EAAArE,EAAKC,cAAAiE,EAA4BI,IAAQ,GAAGP,EAAA,CACvDZ,UAAAU,IACKF,GAGL,IAAOY,EAAA,EAAaC,MAAAZ,GACpB,OAAWS,EAAArE,EAAKC,cAAAiE,EAA4BI,IAAQ,GAAGP,EAAA,CACvDZ,UAAAU,IACKD,GAGL,IAAAmF,EAAiBC,IAAIH,EAAA,SAAAI,GACrB,IAAA7I,EAAA6I,EAAA7I,KAAA,CAAA6I,EAAAX,OAAAW,EAAAb,aAAAc,KAAA,KACA,OAAW7E,EAAArE,EAAKC,cAAekJ,EAAM7E,IAAQ,CAC7ClE,OACK6I,MAGL,OAAS5E,EAAArE,EAAKC,cAAAiE,EAA4BI,IAAQ,GAAGP,EAAA,CACrDZ,UAAAU,IACGkF,GAGHL,EAAA5D,aAAA,4GACA4D,EAAA3D,UA8BC,GACc,IAAAqE,EAAA,EClFfC,EAAAC,EAAA1B,EAAA,sBAAAuB,IAsBA,IAAIA,EAEJ,SAAAhE,GAGA,SAAAoE,IACA,IAAAlE,EAEAC,EAEIC,IAAelE,KAAAkI,GAEnB,QAAA/D,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAuEA,EAAAL,EAAaK,IACpFF,EAAAE,GAAAJ,UAAAI,GAUA,OAPAP,EAAYQ,IAA0BzE,MAAAgE,EAA2BU,IAAewD,IAAAvD,KAAAC,MAAAZ,EAAA,CAAAhE,MAAA6E,OAAAP,KAE5EQ,IAAgBC,IAAuBA,IAAsBd,IAAA,uBAAAkB,GACjE,IAAAD,EAAAjB,EAAA9D,MAAA+E,QACAA,KAAAC,EAAAlB,EAAA9D,SAGA8D,EA4DA,OAhFEoB,IAAS6C,EAAApE,GAuBTwB,IAAY4C,EAAA,EACdnJ,IAAA,SACAwG,MAAA,WACA,IAAAP,EAAAhF,KAAAG,MACAmH,EAAAtC,EAAAsC,SACAhF,EAAA0C,EAAA1C,SACAR,EAAAkD,EAAAlD,UACAqG,EAAAnD,EAAAmD,MACA5F,EAAAyC,EAAAzC,QACAwE,EAAA/B,EAAA+B,YACAC,EAAAhC,EAAAgC,MACAoB,EAAApD,EAAAoD,MACAnB,EAAAjC,EAAAiC,OACAxB,EAAAT,EAAAS,KACA4C,EAAArD,EAAAqD,MACApD,EAAAD,EAAAC,KACAiC,EAAAlC,EAAAkC,KACAhC,EAAAF,EAAAE,QACAoD,EAAAtD,EAAAsD,OACA9F,EAAoBC,IAAE,KAAA0F,EAAcxF,OAAA+C,EAAA,EAAA/C,CAAU2E,EAAA,YAAwB3E,OAAA+C,EAAA,EAAA/C,CAAUyF,EAAA,SAAkBzF,OAAA+C,EAAA,EAAA/C,CAAUsC,EAAA,QAAgBtC,OAAA+C,EAAA,EAAA/C,CAAU2F,EAAA,iBAAAxG,GACtIY,EAAiBC,OAAAC,EAAA,EAAAD,CAAiBuF,EAAAlI,KAAAG,OAClC0C,EAAwBF,OAAAG,EAAA,EAAAH,CAAcuF,EAAAlI,KAAAG,MAAA,WACtC,GAAA+E,EAAA,YAGA,OAAWhC,EAAA,EAAaC,MAAAb,GAQbY,EAAA,EAAaC,MAAAZ,GAQXS,EAAArE,EAAKC,cAAAiE,EAA4BI,IAAQ,GAAGP,EAAA,CACzDZ,UAAAU,EACAiD,OACAP,QAAAlF,KAAA4F,cACU2C,EAAA,EAAKlF,OAAAgF,EAAA,CACf7E,iBAAA,KACOuD,GAAAE,GAAAC,IAAsClE,EAAArE,EAAKC,cAAewI,EAAW,CAC5EL,cACAE,SACAC,SACOF,GAAYhE,EAAArE,EAAKC,cAAewI,EAAW,CAClDJ,OAAA,GACOA,IAnBQhE,EAAArE,EAAKC,cAAAiE,EAA4BI,IAAQ,GAAGP,EAAA,CAC3DZ,UAAAU,EACAiD,OACAP,QAAAlF,KAAA4F,cACSrD,GAZMS,EAAArE,EAAKC,cAAAiE,EAA4BI,IAAQ,GAAGP,EAAA,CAC3DZ,UAAAU,EACAiD,OACAP,QAAAlF,KAAA4F,cACStD,OA2BT4F,EAjFA,CAkFErC,EAAA,WAEFf,IAAgBgD,EAAI,UAAaV,GAEjCtC,IAAgBgD,EAAI,cAAiBrB,GAErC3B,IAAgBgD,EAAI,QAAWC,GAE/BjD,IAAgBgD,EAAI,SAAYnB,GAEhC7B,IAAgBgD,EAAI,OAAUjB,GAE9B/B,IAAgBgD,EAAI,kKAGpBA,EAAIpE,UAsDH","file":"component---src-templates-category-products-js-d98c7f12377dec4eba3c.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport {\n  Card, Grid, Segment, Image, Breadcrumb, Container, Header,\n} from 'semantic-ui-react';\n\n\nimport SiteHeader from '../components/Header';\nimport Footer from '../components/Footer';\nimport '../../semantic/semantic-dist/semantic.css';\nimport '../assets/custom.css';\n\n\n\nclass AllProductsTemplate extends React.PureComponent {\n\n  productCard = (product) => {\n    return (\n      <Grid.Column key={product.node.slug}>\n        <Link to={`${product.node.slug}`}>\n          <Card>\n            <Image alt={product.node.title} src={product.node.images[0]} />\n            <Card.Content>\n              <Card.Header>{product.node.title}</Card.Header>\n              <Card.Description>{`Material: ${product.node.material}`}</Card.Description>\n            </Card.Content>\n          </Card>\n        </Link>\n      </Grid.Column>\n    )\n  }\n\n  render() {\n    console.log(this.props);\n    const { pageContext } = this.props;\n    const { previous, next } = pageContext;\n\n    console.log(pageContext.allProducts);\n    let categoryTitle = 'Products';\n\n    const categoryProductList = pageContext.allProducts.filter((product) => {\n      if (product.node.categorySlug === pageContext.categorySlug) {\n        categoryTitle = product.node.category;\n        return product;\n      }\n    });\n    const renderedCategoryProductList = categoryProductList.map((product) => {\n      return this.productCard(product);\n    });\n\n    return (\n      <div>\n        <SiteHeader {...this.props} />\n        <Segment basic style={{ background: '#ffffff' }}>\n          <Container>\n            <Segment basic style={{ marginBottom: '0' }}>\n              <Breadcrumb size=\"large\">\n                <Breadcrumb.Section><Link to=\"/\">Home</Link></Breadcrumb.Section>\n                <Breadcrumb.Divider icon=\"right chevron\" />\n                <Breadcrumb.Section><Link to=\"/products\">Products</Link></Breadcrumb.Section>\n                <Breadcrumb.Divider icon=\"right chevron\" />\n                <Breadcrumb.Section active>{categoryTitle}</Breadcrumb.Section>\n              </Breadcrumb>\n            </Segment>\n            <Segment basic>\n              <Header as=\"h1\" textAlign=\"center\" className=\"about-header alferex-header\">\n                Product Range\n              </Header>\n              <Segment basic style={{ padding: '5em 0' }}>\n                <Header as=\"h3\" className=\"alferex-product-header\">\n                  <span>{categoryTitle}</span>\n                </Header>\n                <Container>\n                  <Grid stackable columns={3}>\n                    {renderedCategoryProductList}\n                  </Grid>\n                </Container>\n              </Segment>\n            </Segment>\n          </Container>\n        </Segment>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default AllProductsTemplate;\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getUnhandledProps, getElementType } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * A divider sub-component for Breadcrumb component.\n */\n\nfunction BreadcrumbDivider(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      icon = props.icon;\n  var classes = cx('divider', className);\n  var rest = getUnhandledProps(BreadcrumbDivider, props);\n  var ElementType = getElementType(BreadcrumbDivider, props);\n\n  if (!_isNil(icon)) {\n    return Icon.create(icon, {\n      defaultProps: _objectSpread({}, rest, {\n        className: classes\n      }),\n      autoGenerateKey: false\n    });\n  }\n\n  if (!_isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? '/' : children);\n}\n\nBreadcrumbDivider.handledProps = [\"as\", \"children\", \"className\", \"content\", \"icon\"];\nBreadcrumbDivider.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Render as an `Icon` component with `divider` class instead of a `div`. */\n  icon: customPropTypes.itemShorthand\n} : {};\nBreadcrumbDivider.create = createShorthandFactory(BreadcrumbDivider, function (icon) {\n  return {\n    icon: icon\n  };\n});\nexport default BreadcrumbDivider;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getUnhandledProps, getElementType, useKeyOnly } from '../../lib';\n/**\n * A section sub-component for Breadcrumb component.\n */\n\nvar BreadcrumbSection =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BreadcrumbSection, _Component);\n\n  function BreadcrumbSection() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BreadcrumbSection);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BreadcrumbSection)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"computeElementType\", function () {\n      var _this$props = _this.props,\n          link = _this$props.link,\n          onClick = _this$props.onClick;\n      if (link || onClick) return 'a';\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (e) {\n      return _invoke(_this.props, 'onClick', e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(BreadcrumbSection, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          active = _this$props2.active,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          content = _this$props2.content,\n          href = _this$props2.href;\n      var classes = cx(useKeyOnly(active, 'active'), 'section', className);\n      var rest = getUnhandledProps(BreadcrumbSection, this.props);\n      var ElementType = getElementType(BreadcrumbSection, this.props, this.computeElementType);\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), childrenUtils.isNil(children) ? content : children);\n    }\n  }]);\n\n  return BreadcrumbSection;\n}(Component);\n\n_defineProperty(BreadcrumbSection, \"handledProps\", [\"active\", \"as\", \"children\", \"className\", \"content\", \"href\", \"link\", \"onClick\"]);\n\nexport { BreadcrumbSection as default };\nBreadcrumbSection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Style as the currently active section. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n  href: customPropTypes.every([customPropTypes.disallow(['link']), PropTypes.string]),\n\n  /** Render as an `a` tag instead of a `div`. */\n  link: customPropTypes.every([customPropTypes.disallow(['href']), PropTypes.bool]),\n\n  /**\n   * Called on click. When passed, the component will render as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func\n} : {};\nBreadcrumbSection.create = createShorthandFactory(BreadcrumbSection, function (content) {\n  return {\n    content: content,\n    link: true\n  };\n});","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport _each from \"lodash/each\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getUnhandledProps, getElementType, SUI } from '../../lib';\nimport BreadcrumbDivider from './BreadcrumbDivider';\nimport BreadcrumbSection from './BreadcrumbSection';\n/**\n * A breadcrumb is used to show hierarchy between content.\n */\n\nfunction Breadcrumb(props) {\n  var children = props.children,\n      className = props.className,\n      divider = props.divider,\n      icon = props.icon,\n      sections = props.sections,\n      size = props.size;\n  var classes = cx('ui', size, 'breadcrumb', className);\n  var rest = getUnhandledProps(Breadcrumb, props);\n  var ElementType = getElementType(Breadcrumb, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var childElements = [];\n\n  _each(sections, function (section, index) {\n    // section\n    var breadcrumbElement = BreadcrumbSection.create(section);\n    childElements.push(breadcrumbElement); // divider\n\n    if (index !== sections.length - 1) {\n      var key = \"\".concat(breadcrumbElement.key, \"_divider\") || JSON.stringify(section);\n      childElements.push(BreadcrumbDivider.create({\n        content: divider,\n        icon: icon,\n        key: key\n      }));\n    }\n  });\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childElements);\n}\n\nBreadcrumb.handledProps = [\"as\", \"children\", \"className\", \"divider\", \"icon\", \"sections\", \"size\"];\nBreadcrumb.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content of the Breadcrumb.Divider. */\n  divider: customPropTypes.every([customPropTypes.disallow(['icon']), customPropTypes.contentShorthand]),\n\n  /** For use with the sections prop. Render as an `Icon` component with `divider` class instead of a `div` in\n   *  Breadcrumb.Divider. */\n  icon: customPropTypes.every([customPropTypes.disallow(['divider']), customPropTypes.itemShorthand]),\n\n  /** Shorthand array of props for Breadcrumb.Section. */\n  sections: customPropTypes.collectionShorthand,\n\n  /** Size of Breadcrumb. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium'))\n} : {};\nBreadcrumb.Divider = BreadcrumbDivider;\nBreadcrumb.Section = BreadcrumbSection;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a description with one or more paragraphs.\n */\n\nfunction CardDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'description', className);\n  var rest = getUnhandledProps(CardDescription, props);\n  var ElementType = getElementType(CardDescription, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardDescription.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardDescription;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a header.\n */\n\nfunction CardHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(CardHeader, props);\n  var ElementType = getElementType(CardHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card header can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain content metadata.\n */\n\nfunction CardMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'meta', className);\n  var rest = getUnhandledProps(CardMeta, props);\n  var ElementType = getElementType(CardMeta, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card meta can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardMeta;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\nimport CardDescription from './CardDescription';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card can contain blocks of content or extra content meant to be formatted separately from the main content.\n */\n\nfunction CardContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      textAlign = props.textAlign;\n  var classes = cx(useKeyOnly(extra, 'extra'), useTextAlignProp(textAlign), 'content', className);\n  var rest = getUnhandledProps(CardContent, props);\n  var ElementType = getElementType(CardContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(CardHeader, function (val) {\n    return {\n      content: val\n    };\n  }, header, {\n    autoGenerateKey: false\n  }), createShorthand(CardMeta, function (val) {\n    return {\n      content: val\n    };\n  }, meta, {\n    autoGenerateKey: false\n  }), createShorthand(CardDescription, function (val) {\n    return {\n      content: val\n    };\n  }, description, {\n    autoGenerateKey: false\n  }));\n}\n\nCardContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"textAlign\"];\nCardContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** A card can contain extra content meant to be formatted separately from the main content. */\n  extra: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n/**\n * A group of cards.\n */\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  var itemsJSX = _map(items, function (item) {\n    var key = item.key || [item.header, item.description].join('-');\n    return React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nCardGroup.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"content\", \"doubling\", \"items\", \"itemsPerRow\", \"stackable\", \"textAlign\"];\nCardGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A group of cards can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n\n  /** A card group can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport Image from '../../elements/Image';\nimport CardContent from './CardContent';\nimport CardDescription from './CardDescription';\nimport CardGroup from './CardGroup';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card displays site content in a manner similar to a playing card.\n */\n\nvar Card =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Card, _Component);\n\n  function Card() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Card)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (e) {\n      var onClick = _this.props.onClick;\n      if (onClick) onClick(e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          centered = _this$props.centered,\n          children = _this$props.children,\n          className = _this$props.className,\n          color = _this$props.color,\n          content = _this$props.content,\n          description = _this$props.description,\n          extra = _this$props.extra,\n          fluid = _this$props.fluid,\n          header = _this$props.header,\n          href = _this$props.href,\n          image = _this$props.image,\n          link = _this$props.link,\n          meta = _this$props.meta,\n          onClick = _this$props.onClick,\n          raised = _this$props.raised;\n      var classes = cx('ui', color, useKeyOnly(centered, 'centered'), useKeyOnly(fluid, 'fluid'), useKeyOnly(link, 'link'), useKeyOnly(raised, 'raised'), 'card', className);\n      var rest = getUnhandledProps(Card, this.props);\n      var ElementType = getElementType(Card, this.props, function () {\n        if (onClick) return 'a';\n      });\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), children);\n      }\n\n      if (!childrenUtils.isNil(content)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), content);\n      }\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), Image.create(image, {\n        autoGenerateKey: false\n      }), (description || header || meta) && React.createElement(CardContent, {\n        description: description,\n        header: header,\n        meta: meta\n      }), extra && React.createElement(CardContent, {\n        extra: true\n      }, extra));\n    }\n  }]);\n\n  return Card;\n}(Component);\n\n_defineProperty(Card, \"Content\", CardContent);\n\n_defineProperty(Card, \"Description\", CardDescription);\n\n_defineProperty(Card, \"Group\", CardGroup);\n\n_defineProperty(Card, \"Header\", CardHeader);\n\n_defineProperty(Card, \"Meta\", CardMeta);\n\n_defineProperty(Card, \"handledProps\", [\"as\", \"centered\", \"children\", \"className\", \"color\", \"content\", \"description\", \"extra\", \"fluid\", \"header\", \"href\", \"image\", \"link\", \"meta\", \"onClick\", \"raised\"]);\n\nexport { Card as default };\nCard.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A Card can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A Card can be formatted to display different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for primary content of CardContent. */\n  extra: customPropTypes.contentShorthand,\n\n  /** A Card can be formatted to take up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n  href: PropTypes.string,\n\n  /** A card can contain an Image component. */\n  image: customPropTypes.itemShorthand,\n\n  /** A card can be formatted to link to other content. */\n  link: PropTypes.bool,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /**\n   * Called on click. When passed, the component renders as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A Card can be formatted to raise above the page. */\n  raised: PropTypes.bool\n} : {};"],"sourceRoot":""}