{"version":3,"sources":["webpack:///./src/templates/product-post.js"],"names":["ProductPostTemplate","render","_this$props","this","props","data","location","pageContext","siteTitle","get","product","productsJson","siteDescription","description","carouselContent","previous","next","images","map","image","idx","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","semantic_ui_react__WEBPACK_IMPORTED_MODULE_7__","alt","title","src","withPrefix","size","key","_components_Header__WEBPACK_IMPORTED_MODULE_14__","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","lang","meta","name","content","semantic_ui_react__WEBPACK_IMPORTED_MODULE_8__","basic","style","background","semantic_ui_react__WEBPACK_IMPORTED_MODULE_9__","marginBottom","semantic_ui_react__WEBPACK_IMPORTED_MODULE_10__","Section","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","Divider","icon","categorySlug","category","active","semantic_ui_react__WEBPACK_IMPORTED_MODULE_11__","as","textAlign","className","vertical","padding","semantic_ui_react__WEBPACK_IMPORTED_MODULE_12__","stackable","columns","Column","antd_lib_carousel__WEBPACK_IMPORTED_MODULE_1___default","dots","infinite","speed","slidesToShow","slidesToScroll","effect","autoplay","semantic_ui_react__WEBPACK_IMPORTED_MODULE_13__","divided","relaxed","Item","Content","Header","material","type","_components_Footer__WEBPACK_IMPORTED_MODULE_15__","React","PureComponent","pageQuery"],"mappings":"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","file":"component---src-templates-product-post-js-35b59aca91485c8eb474.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport { Link, graphql, withPrefix } from 'gatsby';\nimport get from 'lodash/get';\nimport {\n  Carousel,\n} from 'antd';\nimport { Grid, Segment, List, Breadcrumb, Image, Container, Header } from 'semantic-ui-react';\n\n\nimport SiteHeader from '../components/Header';\nimport Footer from '../components/Footer';\nimport '../../semantic/semantic-dist/semantic.css';\nimport '../assets/custom.css';\n\nclass ProductPostTemplate extends React.PureComponent {\n  render() {\n    const { location, data, pageContext } = this.props;\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title');\n    const product = data.productsJson;\n    const siteDescription = product.description;\n    const { previous, next } = pageContext;\n\n    const carouselContent = product.images.map((image, idx) => (\n      <Image alt={product.title} src={withPrefix(image)} size=\"medium\" key={idx} />\n    ));\n\n    const carouselProps = {\n      dots: true,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      effect: 'fade',\n      autoplay: true,\n    };\n\n    return (\n      <div>\n        <SiteHeader {...this.props} />\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={`${product.title} | ${siteTitle}`}\n        />\n        <Segment basic style={{ background: '#ffffff' }}>\n          <Container>\n            <Segment basic style={{ marginBottom: '0' }}>\n              <Breadcrumb size=\"large\">\n                <Breadcrumb.Section><Link to=\"/\">Home</Link></Breadcrumb.Section>\n                <Breadcrumb.Divider icon=\"right chevron\" />\n                <Breadcrumb.Section><Link to=\"/products\">Products</Link></Breadcrumb.Section>\n                <Breadcrumb.Divider icon=\"right chevron\" />\n                <Breadcrumb.Section><Link to={`/products/${product.categorySlug}`}>{product.category}</Link></Breadcrumb.Section>\n                <Breadcrumb.Divider icon=\"right chevron\" />\n                <Breadcrumb.Section active>{product.title}</Breadcrumb.Section>\n              </Breadcrumb>\n            </Segment>\n            <Segment basic>\n              <Header as=\"h1\" textAlign=\"center\" className=\"about-header alferex-header\">\n                {product.title}\n              </Header>\n              <Segment vertical style={{ padding: '5em 0' }}>\n                <Container>\n                  <Grid stackable columns={2}>\n                    <Grid.Column>\n                      <Segment basic>\n                        <Carousel {...carouselProps}>\n                          {carouselContent}\n                        </Carousel>\n                      </Segment>\n                    </Grid.Column>\n                    <Grid.Column>\n                      <Segment basic>\n                        <List divided relaxed=\"very\" size=\"large\">\n                          <List.Item>\n                            <List.Content>\n                              <List.Header>Description</List.Header>\n                              {product.description}\n                            </List.Content>\n                          </List.Item>\n                          <List.Item>\n                            <List.Content>\n                              <List.Header>Material</List.Header>\n                              {product.material}\n                            </List.Content>\n                          </List.Item>\n                          <List.Item>\n                            <List.Content>\n                              <List.Header>Type</List.Header>\n                              {product.type}\n                            </List.Content>\n                          </List.Item>\n                          <List.Item>\n                            <List.Content>\n                              <List.Header>Product</List.Header>\n                              {product.category}\n                            </List.Content>\n                          </List.Item>\n                        </List>\n                      </Segment>\n                    </Grid.Column>\n                  </Grid>\n                </Container>\n              </Segment>\n            </Segment>\n          </Container>\n        </Segment>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default ProductPostTemplate;\n\nexport const pageQuery = graphql`\n  query ProductPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    productsJson(fields: { slug: { eq: $slug } }) {\n      id\n      title\n      description\n      material\n      type\n      category\n      categorySlug\n      images\n    }\n  }\n`;\n"],"sourceRoot":""}