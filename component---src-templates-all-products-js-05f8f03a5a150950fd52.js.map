{"version":3,"sources":["webpack:///./src/templates/all-products.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Breadcrumb/BreadcrumbDivider.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Breadcrumb/BreadcrumbSection.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Breadcrumb/Breadcrumb.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardDescription.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardHeader.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardMeta.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/Card.js"],"names":["AllProductsTemplate","productCard","product","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","Column","key","node","slug","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_5__","alt","title","src","images","Content","Header","Description","material","render","_this2","this","console","log","props","pageContext","previous","next","allProducts","renderedPulleyList","filter","categorySlug","map","renderedShaftList","_components_Header__WEBPACK_IMPORTED_MODULE_10__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_6__","basic","style","background","semantic_ui_react__WEBPACK_IMPORTED_MODULE_7__","marginBottom","semantic_ui_react__WEBPACK_IMPORTED_MODULE_8__","size","Section","link","Divider","icon","active","semantic_ui_react__WEBPACK_IMPORTED_MODULE_9__","as","textAlign","className","padding","dividing","stackable","columns","_components_Footer__WEBPACK_IMPORTED_MODULE_11__","React","PureComponent","BreadcrumbDivider","children","content","classes","classnames_default","rest","Object","getUnhandledProps","ElementType","getElementType","isNil_default","react_default","extends_default","lib","isNil","Icon","create","defaultProps","objectSpread_default","autoGenerateKey","handledProps","propTypes","factories","Breadcrumb_BreadcrumbDivider","BreadcrumbSection_BreadcrumbSection","_Component","BreadcrumbSection","_getPrototypeOf2","_this","classCallCheck_default","_len","arguments","length","args","Array","_key","possibleConstructorReturn_default","getPrototypeOf_default","call","apply","concat","defineProperty_default","assertThisInitialized_default","_this$props","onClick","e","invoke_default","inherits_default","createClass_default","value","_this$props2","href","classNameBuilders","computeElementType","handleClick","react","Breadcrumb","divider","sections","childElements","each_default","section","index","breadcrumbElement","push","__webpack_exports__","CardDescription","Card_CardDescription","CardHeader","Card_CardHeader","CardMeta","Card_CardMeta","CardContent","description","extra","header","meta","val","Card_CardContent","CardGroup","centered","doubling","items","itemsPerRow","itemsJSX","map_default","item","join","Card_Card","Card_CardGroup","__webpack_require__","d","Card","color","fluid","image","raised","Image"],"mappings":"gOAcMA,qKAEJC,YAAc,SAACC,GACb,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAKC,OAAN,CAAaC,IAAKN,EAAQO,KAAKC,MAC7BP,EAAAC,EAAAC,cAACM,EAAA,KAAD,CAAMC,GAAE,GAAKV,EAAQO,KAAKC,MACxBP,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAOC,IAAKb,EAAQO,KAAKO,MAAOC,IAAKf,EAAQO,KAAKS,OAAO,KACzDf,EAAAC,EAAAC,cAACQ,EAAA,EAAKM,QAAN,KACEhB,EAAAC,EAAAC,cAACQ,EAAA,EAAKO,OAAN,KAAclB,EAAQO,KAAKO,OAC3Bb,EAAAC,EAAAC,cAACQ,EAAA,EAAKQ,YAAN,kBAAgCnB,EAAQO,KAAKa,6CAQzDC,OAAA,WAAS,IAAAC,EAAAC,KACPC,QAAQC,IAAIF,KAAKG,OADV,IAECC,EAAgBJ,KAAKG,MAArBC,YACmBA,EAAnBC,SAAmBD,EAATE,KAElBL,QAAQC,IAAIE,EAAYG,aAExB,IAKMC,EALaJ,EAAYG,YAAYE,OAAO,SAAChC,GACjD,GAAkC,YAA9BA,EAAQO,KAAK0B,aACf,OAAOjC,IAG2BkC,IAAI,SAAClC,GACzC,OAAOsB,EAAKvB,YAAYC,KAQpBmC,EALYR,EAAYG,YAAYE,OAAO,SAAChC,GAChD,GAAkC,UAA9BA,EAAQO,KAAK0B,aACf,OAAOX,EAAKvB,YAAYC,KAGQkC,IAAI,SAAClC,GACvC,OAAOsB,EAAKvB,YAAYC,KAG1B,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiC,EAAA,EAAeb,KAAKG,OACrBzB,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAASC,OAAK,EAACC,MAAO,CAAEC,WAAY,YAClCvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,KACExC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAASC,OAAK,EAACC,MAAO,CAAEG,aAAc,MACpCzC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAYC,KAAK,SACf3C,EAAAC,EAAAC,cAACwC,EAAA,EAAWE,QAAZ,CAAoBC,MAAI,GAAC7C,EAAAC,EAAAC,cAACM,EAAA,KAAD,CAAMC,GAAG,KAAT,SACzBT,EAAAC,EAAAC,cAACwC,EAAA,EAAWI,QAAZ,CAAoBC,KAAK,kBACzB/C,EAAAC,EAAAC,cAACwC,EAAA,EAAWE,QAAZ,CAAoBI,QAAM,GAA1B,cAGJhD,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAASC,OAAK,GACZrC,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAQC,GAAG,KAAKC,UAAU,SAASC,UAAU,+BAA7C,iBAGApD,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAASC,OAAK,EAACC,MAAO,CAAEe,QAAS,UAC/BrD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAQC,GAAG,KAAKI,UAAQ,EAACF,UAAU,0BAAnC,WAGApD,EAAAC,EAAAC,cAACsC,EAAA,EAAD,KACExC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoD,WAAS,EAACC,QAAS,GACtB1B,KAIP9B,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAASC,OAAK,EAACC,MAAO,CAAEe,QAAS,UAC/BrD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAQC,GAAG,KAAKI,UAAQ,EAACF,UAAU,0BAAnC,SAGApD,EAAAC,EAAAC,cAACsC,EAAA,EAAD,KACExC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoD,WAAS,EAACC,QAAS,GACtBtB,QAOblC,EAAAC,EAAAC,cAACuD,EAAA,EAAD,WAlF0BC,IAAMC,gBAwFzB9D,yNC1Ff,SAAA+D,EAAAnC,GACA,IAAAoC,EAAApC,EAAAoC,SACAT,EAAA3B,EAAA2B,UACAU,EAAArC,EAAAqC,QACAf,EAAAtB,EAAAsB,KACAgB,EAAgBC,IAAE,UAAAZ,GAClBa,EAAaC,OAAAC,EAAA,EAAAD,CAAiBN,EAAAnC,GAC9B2C,EAAoBF,OAAAG,EAAA,EAAAH,CAAcN,EAAAnC,GAElC,OAAO6C,IAAMvB,GASNuB,IAAMR,GAMJS,EAAAtE,EAAKC,cAAAkE,EAA4BI,IAAQ,GAAGP,EAAA,CACrDb,UAAAW,IACMU,EAAA,EAAaC,MAAAb,GAAA,IAAAA,GAPRU,EAAAtE,EAAKC,cAAAkE,EAA4BI,IAAQ,GAAGP,EAAA,CACvDb,UAAAW,IACKD,GAXMa,EAAA,EAAIC,OAAA7B,EAAA,CACf8B,aAAoBC,IAAa,GAAGb,EAAA,CACpCb,UAAAW,IAEAgB,iBAAA,IAeAnB,EAAAoB,aAAA,+CACApB,EAAAqB,UAeC,GACDrB,EAAAgB,OAA2BV,OAAAgB,EAAA,EAAAhB,CAAsBN,EAAA,SAAAb,GACjD,OACAA,UAGe,IAAAoC,EAAA,yJC9CXC,EAEJ,SAAAC,GAGA,SAAAC,IACA,IAAAC,EAEAC,EAEIC,IAAenE,KAAAgE,GAEnB,QAAAI,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAuEA,EAAAL,EAAaK,IACpFF,EAAAE,GAAAJ,UAAAI,GAgBA,OAbAP,EAAYQ,IAA0B1E,MAAAiE,EAA2BU,IAAeX,IAAAY,KAAAC,MAAAZ,EAAA,CAAAjE,MAAA8E,OAAAP,KAE5EQ,IAAgBC,IAAuBA,IAAsBd,IAAA,gCACjE,IAAAe,EAAAf,EAAA/D,MACAoB,EAAA0D,EAAA1D,KACA2D,EAAAD,EAAAC,QACA,GAAA3D,GAAA2D,EAAA,YAGIH,IAAgBC,IAAuBA,IAAsBd,IAAA,uBAAAiB,GACjE,OAAaC,IAAOlB,EAAA/D,MAAA,UAAAgF,EAAAjB,EAAA/D,SAGpB+D,EAuBA,OAjDEmB,IAASrB,EAAAD,GA6BTuB,IAAYtB,EAAA,EACdjF,IAAA,SACAwG,MAAA,WACA,IAAAC,EAAAxF,KAAAG,MACAuB,EAAA8D,EAAA9D,OACAa,EAAAiD,EAAAjD,SACAT,EAAA0D,EAAA1D,UACAU,EAAAgD,EAAAhD,QACAiD,EAAAD,EAAAC,KACAhD,EAAoBC,IAAGE,OAAA8C,EAAA,EAAA9C,CAAUlB,EAAA,oBAAAI,GACjCa,EAAiBC,OAAAC,EAAA,EAAAD,CAAiBoB,EAAAhE,KAAAG,OAClC2C,EAAwBF,OAAAG,EAAA,EAAAH,CAAcoB,EAAAhE,KAAAG,MAAAH,KAAA2F,oBACtC,OAAa1C,EAAAtE,EAAKC,cAAAkE,EAA4BI,IAAQ,GAAGP,EAAA,CACzDb,UAAAW,EACAgD,OACAP,QAAAlF,KAAA4F,cACUzC,EAAA,EAAaC,MAAAb,GAAAC,EAAAD,OAIvByB,EAlDA,CAmDE6B,EAAA,WCzDF,SAAAC,EAAA3F,GACA,IAAAoC,EAAApC,EAAAoC,SACAT,EAAA3B,EAAA2B,UACAiE,EAAA5F,EAAA4F,QACAtE,EAAAtB,EAAAsB,KACAuE,EAAA7F,EAAA6F,SACA3E,EAAAlB,EAAAkB,KACAoB,EAAgBC,IAAE,KAAArB,EAAA,aAAAS,GAClBa,EAAaC,OAAAC,EAAA,EAAAD,CAAiBkD,EAAA3F,GAC9B2C,EAAoBF,OAAAG,EAAA,EAAAH,CAAckD,EAAA3F,GAElC,IAAOgD,EAAA,EAAaC,MAAAb,GACpB,OAAWU,EAAAtE,EAAKC,cAAAkE,EAA4BI,IAAQ,GAAGP,EAAA,CACvDb,UAAAW,IACKF,GAGL,IAAA0D,EAAA,GAiBA,OAfEC,IAAKF,EAAA,SAAAG,EAAAC,GAEP,IAAAC,EAA4BvC,EAAiBR,OAAA6C,GAG7C,GAFAF,EAAAK,KAAAD,GAEAD,IAAAJ,EAAA1B,OAAA,GACA,IAAAvF,EAAA,GAAA+F,OAAAuB,EAAAtH,IAAA,cAAgE,EAChEkH,EAAAK,KAAyBzC,EAAiBP,OAAA,CAC1Cd,QAAAuD,EACAtE,OACA1C,YAKSkE,EAAAtE,EAAKC,cAAAkE,EAA4BI,IAAQ,GAAGP,EAAA,CACrDb,UAAAW,IACGwD,GDuBHlB,IAAgBjB,EAAiB,yFAGjCA,EAAiBH,UA8BhB,GACDG,EAAiBR,OAAUV,OAAAgB,EAAA,EAAAhB,CAAuBkB,EAAiB,SAAAtB,GACnE,OACAA,UACAjB,MAAA,KCzDAuE,EAAApC,aAAA,iEACAoC,EAAAnC,UAsBC,GACDmC,EAAAtE,QAAqBqC,EACrBiC,EAAAxE,QAAqBwC,EACNyC,EAAA,gSCpEf,SAAAC,EAAArG,GACA,IAAAoC,EAAApC,EAAAoC,SACAT,EAAA3B,EAAA2B,UACAU,EAAArC,EAAAqC,QACAX,EAAA1B,EAAA0B,UACAY,EAAgBC,IAAGE,OAAA8C,EAAA,EAAA9C,CAAgBf,GAAA,cAAAC,GACnCa,EAAaC,OAAAC,EAAA,EAAAD,CAAiB4D,EAAArG,GAC9B2C,EAAoBF,OAAAG,EAAA,EAAAH,CAAc4D,EAAArG,GAClC,OAAS8C,EAAAtE,EAAKC,cAAAkE,EAA4BI,IAAQ,GAAGP,EAAA,CACrDb,UAAAW,IACMU,EAAA,EAAaC,MAAAb,GAAAC,EAAAD,GAGnBiE,EAAA9C,aAAA,oDACA8C,EAAA7C,UAeC,GACc,IAAA8C,EAAA,EC9Bf,SAAAC,EAAAvG,GACA,IAAAoC,EAAApC,EAAAoC,SACAT,EAAA3B,EAAA2B,UACAU,EAAArC,EAAAqC,QACAX,EAAA1B,EAAA0B,UACAY,EAAgBC,IAAGE,OAAA8C,EAAA,EAAA9C,CAAgBf,GAAA,SAAAC,GACnCa,EAAaC,OAAAC,EAAA,EAAAD,CAAiB8D,EAAAvG,GAC9B2C,EAAoBF,OAAAG,EAAA,EAAAH,CAAc8D,EAAAvG,GAClC,OAAS8C,EAAAtE,EAAKC,cAAAkE,EAA4BI,IAAQ,GAAGP,EAAA,CACrDb,UAAAW,IACMU,EAAA,EAAaC,MAAAb,GAAAC,EAAAD,GAGnBmE,EAAAhD,aAAA,oDACAgD,EAAA/C,UAeC,GACc,IAAAgD,EAAA,EC9Bf,SAAAC,EAAAzG,GACA,IAAAoC,EAAApC,EAAAoC,SACAT,EAAA3B,EAAA2B,UACAU,EAAArC,EAAAqC,QACAX,EAAA1B,EAAA0B,UACAY,EAAgBC,IAAGE,OAAA8C,EAAA,EAAA9C,CAAgBf,GAAA,OAAAC,GACnCa,EAAaC,OAAAC,EAAA,EAAAD,CAAiBgE,EAAAzG,GAC9B2C,EAAoBF,OAAAG,EAAA,EAAAH,CAAcgE,EAAAzG,GAClC,OAAS8C,EAAAtE,EAAKC,cAAAkE,EAA4BI,IAAQ,GAAGP,EAAA,CACrDb,UAAAW,IACMU,EAAA,EAAaC,MAAAb,GAAAC,EAAAD,GAGnBqE,EAAAlD,aAAA,oDACAkD,EAAAjD,UAeC,GACc,IAAAkD,EAAA,EC3Bf,SAAAC,EAAA3G,GACA,IAAAoC,EAAApC,EAAAoC,SACAT,EAAA3B,EAAA2B,UACAU,EAAArC,EAAAqC,QACAuE,EAAA5G,EAAA4G,YACAC,EAAA7G,EAAA6G,MACAC,EAAA9G,EAAA8G,OACAC,EAAA/G,EAAA+G,KACArF,EAAA1B,EAAA0B,UACAY,EAAgBC,IAAGE,OAAA8C,EAAA,EAAA9C,CAAUoE,EAAA,SAAkBpE,OAAA8C,EAAA,EAAA9C,CAAgBf,GAAA,UAAAC,GAC/Da,EAAaC,OAAAC,EAAA,EAAAD,CAAiBkE,EAAA3G,GAC9B2C,EAAoBF,OAAAG,EAAA,EAAAH,CAAckE,EAAA3G,GAElC,OAAOgD,EAAA,EAAaC,MAAAb,GAMbY,EAAA,EAAaC,MAAAZ,GAMXS,EAAAtE,EAAKC,cAAAkE,EAA4BI,IAAQ,GAAGP,EAAA,CACrDb,UAAAW,IACMG,OAAAgB,EAAA,EAAAhB,CAAgB+D,EAAU,SAAAQ,GAChC,OACA3E,QAAA2E,IAEGF,EAAA,CACHxD,iBAAA,IACMb,OAAAgB,EAAA,EAAAhB,CAAgBiE,EAAQ,SAAAM,GAC9B,OACA3E,QAAA2E,IAEGD,EAAA,CACHzD,iBAAA,IACMb,OAAAgB,EAAA,EAAAhB,CAAgB6D,EAAe,SAAAU,GACrC,OACA3E,QAAA2E,IAEGJ,EAAA,CACHtD,iBAAA,KAxBWR,EAAAtE,EAAKC,cAAAkE,EAA4BI,IAAQ,GAAGP,EAAA,CACvDb,UAAAW,IACKD,GARMS,EAAAtE,EAAKC,cAAAkE,EAA4BI,IAAQ,GAAGP,EAAA,CACvDb,UAAAW,IACKF,GAgCLuE,EAAApD,aAAA,0FACAoD,EAAAnD,UA2BC,GACc,IAAAyD,EAAA,oBC9Ef,SAAAC,EAAAlH,GACA,IAAAmH,EAAAnH,EAAAmH,SACA/E,EAAApC,EAAAoC,SACAT,EAAA3B,EAAA2B,UACAU,EAAArC,EAAAqC,QACA+E,EAAApH,EAAAoH,SACAC,EAAArH,EAAAqH,MACAC,EAAAtH,EAAAsH,YACAxF,EAAA9B,EAAA8B,UACAJ,EAAA1B,EAAA0B,UACAY,EAAgBC,IAAE,KAAOE,OAAA8C,EAAA,EAAA9C,CAAU0E,EAAA,YAAwB1E,OAAA8C,EAAA,EAAA9C,CAAU2E,EAAA,YAAwB3E,OAAA8C,EAAA,EAAA9C,CAAUX,EAAA,aAA0BW,OAAA8C,EAAA,EAAA9C,CAAgBf,GAAae,OAAA8C,EAAA,EAAA9C,CAAY6E,GAAA,QAAA3F,GAC1Ka,EAAaC,OAAAC,EAAA,EAAAD,CAAiByE,EAAAlH,GAC9B2C,EAAoBF,OAAAG,EAAA,EAAAH,CAAcyE,EAAAlH,GAElC,IAAOgD,EAAA,EAAaC,MAAAb,GACpB,OAAWU,EAAAtE,EAAKC,cAAAkE,EAA4BI,IAAQ,GAAGP,EAAA,CACvDb,UAAAW,IACKF,GAGL,IAAOY,EAAA,EAAaC,MAAAZ,GACpB,OAAWS,EAAAtE,EAAKC,cAAAkE,EAA4BI,IAAQ,GAAGP,EAAA,CACvDb,UAAAW,IACKD,GAGL,IAAAkF,EAAiBC,IAAIH,EAAA,SAAAI,GACrB,IAAA7I,EAAA6I,EAAA7I,KAAA,CAAA6I,EAAAX,OAAAW,EAAAb,aAAAc,KAAA,KACA,OAAW5E,EAAAtE,EAAKC,cAAekJ,EAAM5E,IAAQ,CAC7CnE,OACK6I,MAGL,OAAS3E,EAAAtE,EAAKC,cAAAkE,EAA4BI,IAAQ,GAAGP,EAAA,CACrDb,UAAAW,IACGiF,GAGHL,EAAA3D,aAAA,4GACA2D,EAAA1D,UA8BC,GACc,IAAAoE,EAAA,EClFfC,EAAAC,EAAA1B,EAAA,sBAAAuB,IAsBA,IAAIA,EAEJ,SAAA/D,GAGA,SAAAmE,IACA,IAAAjE,EAEAC,EAEIC,IAAenE,KAAAkI,GAEnB,QAAA9D,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAuEA,EAAAL,EAAaK,IACpFF,EAAAE,GAAAJ,UAAAI,GAUA,OAPAP,EAAYQ,IAA0B1E,MAAAiE,EAA2BU,IAAeuD,IAAAtD,KAAAC,MAAAZ,EAAA,CAAAjE,MAAA8E,OAAAP,KAE5EQ,IAAgBC,IAAuBA,IAAsBd,IAAA,uBAAAiB,GACjE,IAAAD,EAAAhB,EAAA/D,MAAA+E,QACAA,KAAAC,EAAAjB,EAAA/D,SAGA+D,EA4DA,OAhFEmB,IAAS6C,EAAAnE,GAuBTuB,IAAY4C,EAAA,EACdnJ,IAAA,SACAwG,MAAA,WACA,IAAAN,EAAAjF,KAAAG,MACAmH,EAAArC,EAAAqC,SACA/E,EAAA0C,EAAA1C,SACAT,EAAAmD,EAAAnD,UACAqG,EAAAlD,EAAAkD,MACA3F,EAAAyC,EAAAzC,QACAuE,EAAA9B,EAAA8B,YACAC,EAAA/B,EAAA+B,MACAoB,EAAAnD,EAAAmD,MACAnB,EAAAhC,EAAAgC,OACAxB,EAAAR,EAAAQ,KACA4C,EAAApD,EAAAoD,MACA9G,EAAA0D,EAAA1D,KACA2F,EAAAjC,EAAAiC,KACAhC,EAAAD,EAAAC,QACAoD,EAAArD,EAAAqD,OACA7F,EAAoBC,IAAE,KAAAyF,EAAcvF,OAAA8C,EAAA,EAAA9C,CAAU0E,EAAA,YAAwB1E,OAAA8C,EAAA,EAAA9C,CAAUwF,EAAA,SAAkBxF,OAAA8C,EAAA,EAAA9C,CAAUrB,EAAA,QAAgBqB,OAAA8C,EAAA,EAAA9C,CAAU0F,EAAA,iBAAAxG,GACtIa,EAAiBC,OAAAC,EAAA,EAAAD,CAAiBsF,EAAAlI,KAAAG,OAClC2C,EAAwBF,OAAAG,EAAA,EAAAH,CAAcsF,EAAAlI,KAAAG,MAAA,WACtC,GAAA+E,EAAA,YAGA,OAAW/B,EAAA,EAAaC,MAAAb,GAQbY,EAAA,EAAaC,MAAAZ,GAQXS,EAAAtE,EAAKC,cAAAkE,EAA4BI,IAAQ,GAAGP,EAAA,CACzDb,UAAAW,EACAgD,OACAP,QAAAlF,KAAA4F,cACU2C,EAAA,EAAKjF,OAAA+E,EAAA,CACf5E,iBAAA,KACOsD,GAAAE,GAAAC,IAAsCjE,EAAAtE,EAAKC,cAAewI,EAAW,CAC5EL,cACAE,SACAC,SACOF,GAAY/D,EAAAtE,EAAKC,cAAewI,EAAW,CAClDJ,OAAA,GACOA,IAnBQ/D,EAAAtE,EAAKC,cAAAkE,EAA4BI,IAAQ,GAAGP,EAAA,CAC3Db,UAAAW,EACAgD,OACAP,QAAAlF,KAAA4F,cACSpD,GAZMS,EAAAtE,EAAKC,cAAAkE,EAA4BI,IAAQ,GAAGP,EAAA,CAC3Db,UAAAW,EACAgD,OACAP,QAAAlF,KAAA4F,cACSrD,OA2BT2F,EAjFA,CAkFErC,EAAA,WAEFd,IAAgB+C,EAAI,UAAaV,GAEjCrC,IAAgB+C,EAAI,cAAiBrB,GAErC1B,IAAgB+C,EAAI,QAAWC,GAE/BhD,IAAgB+C,EAAI,SAAYnB,GAEhC5B,IAAgB+C,EAAI,OAAUjB,GAE9B9B,IAAgB+C,EAAI,kKAGpBA,EAAInE,UAsDH","file":"component---src-templates-all-products-js-05f8f03a5a150950fd52.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport {\n  Card, Grid, Segment, Image, Breadcrumb, Container, Header,\n} from 'semantic-ui-react';\n\n\nimport SiteHeader from '../components/Header';\nimport Footer from '../components/Footer';\nimport '../../semantic/semantic-dist/semantic.css';\nimport '../assets/custom.css';\n\n\n\nclass AllProductsTemplate extends React.PureComponent {\n\n  productCard = (product) => {\n    return (\n      <Grid.Column key={product.node.slug}>\n        <Link to={`${product.node.slug}`}>\n          <Card>\n            <Image alt={product.node.title} src={product.node.images[0]} />\n            <Card.Content>\n              <Card.Header>{product.node.title}</Card.Header>\n              <Card.Description>{`Material: ${product.node.material}`}</Card.Description>\n            </Card.Content>\n          </Card>\n        </Link>\n      </Grid.Column>\n    )\n  }\n\n  render() {\n    console.log(this.props);\n    const { pageContext } = this.props;\n    const { previous, next } = pageContext;\n\n    console.log(pageContext.allProducts);\n\n    const pulleyList = pageContext.allProducts.filter((product) => {\n      if (product.node.categorySlug === 'pulleys') {\n        return product;\n      }\n    });\n    const renderedPulleyList = pulleyList.map((product) => {\n      return this.productCard(product);\n    });\n\n    const shaftList = pageContext.allProducts.filter((product) => {\n      if (product.node.categorySlug === 'gears') {\n        return this.productCard(product);\n      }\n    });\n    const renderedShaftList = shaftList.map((product) => {\n      return this.productCard(product);\n    });\n\n    return (\n      <div>\n        <SiteHeader {...this.props} />\n        <Segment basic style={{ background: '#ffffff' }}>\n          <Container>\n            <Segment basic style={{ marginBottom: '0' }}>\n              <Breadcrumb size=\"large\">\n                <Breadcrumb.Section link><Link to=\"/\">Home</Link></Breadcrumb.Section>\n                <Breadcrumb.Divider icon=\"right chevron\" />\n                <Breadcrumb.Section active>Products</Breadcrumb.Section>\n              </Breadcrumb>\n            </Segment>\n            <Segment basic>\n              <Header as=\"h1\" textAlign=\"center\" className=\"about-header alferex-header\">\n                Product Range\n              </Header>\n              <Segment basic style={{ padding: '5em 0' }}>\n                <Header as=\"h3\" dividing className=\"alferex-product-header\">\n                  Pulleys\n                </Header>\n                <Container>\n                  <Grid stackable columns={3}>\n                    {renderedPulleyList}\n                  </Grid>\n                </Container>\n              </Segment>\n              <Segment basic style={{ padding: '5em 0' }}>\n                <Header as=\"h3\" dividing className=\"alferex-product-header\">\n                  Gears\n                </Header>\n                <Container>\n                  <Grid stackable columns={3}>\n                    {renderedShaftList}\n                  </Grid>\n                </Container>\n              </Segment>\n            </Segment>\n          </Container>\n        </Segment>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default AllProductsTemplate;\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getUnhandledProps, getElementType } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * A divider sub-component for Breadcrumb component.\n */\n\nfunction BreadcrumbDivider(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      icon = props.icon;\n  var classes = cx('divider', className);\n  var rest = getUnhandledProps(BreadcrumbDivider, props);\n  var ElementType = getElementType(BreadcrumbDivider, props);\n\n  if (!_isNil(icon)) {\n    return Icon.create(icon, {\n      defaultProps: _objectSpread({}, rest, {\n        className: classes\n      }),\n      autoGenerateKey: false\n    });\n  }\n\n  if (!_isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? '/' : children);\n}\n\nBreadcrumbDivider.handledProps = [\"as\", \"children\", \"className\", \"content\", \"icon\"];\nBreadcrumbDivider.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Render as an `Icon` component with `divider` class instead of a `div`. */\n  icon: customPropTypes.itemShorthand\n} : {};\nBreadcrumbDivider.create = createShorthandFactory(BreadcrumbDivider, function (icon) {\n  return {\n    icon: icon\n  };\n});\nexport default BreadcrumbDivider;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getUnhandledProps, getElementType, useKeyOnly } from '../../lib';\n/**\n * A section sub-component for Breadcrumb component.\n */\n\nvar BreadcrumbSection =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BreadcrumbSection, _Component);\n\n  function BreadcrumbSection() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BreadcrumbSection);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BreadcrumbSection)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"computeElementType\", function () {\n      var _this$props = _this.props,\n          link = _this$props.link,\n          onClick = _this$props.onClick;\n      if (link || onClick) return 'a';\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (e) {\n      return _invoke(_this.props, 'onClick', e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(BreadcrumbSection, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          active = _this$props2.active,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          content = _this$props2.content,\n          href = _this$props2.href;\n      var classes = cx(useKeyOnly(active, 'active'), 'section', className);\n      var rest = getUnhandledProps(BreadcrumbSection, this.props);\n      var ElementType = getElementType(BreadcrumbSection, this.props, this.computeElementType);\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), childrenUtils.isNil(children) ? content : children);\n    }\n  }]);\n\n  return BreadcrumbSection;\n}(Component);\n\n_defineProperty(BreadcrumbSection, \"handledProps\", [\"active\", \"as\", \"children\", \"className\", \"content\", \"href\", \"link\", \"onClick\"]);\n\nexport { BreadcrumbSection as default };\nBreadcrumbSection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Style as the currently active section. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n  href: customPropTypes.every([customPropTypes.disallow(['link']), PropTypes.string]),\n\n  /** Render as an `a` tag instead of a `div`. */\n  link: customPropTypes.every([customPropTypes.disallow(['href']), PropTypes.bool]),\n\n  /**\n   * Called on click. When passed, the component will render as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func\n} : {};\nBreadcrumbSection.create = createShorthandFactory(BreadcrumbSection, function (content) {\n  return {\n    content: content,\n    link: true\n  };\n});","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport _each from \"lodash/each\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getUnhandledProps, getElementType, SUI } from '../../lib';\nimport BreadcrumbDivider from './BreadcrumbDivider';\nimport BreadcrumbSection from './BreadcrumbSection';\n/**\n * A breadcrumb is used to show hierarchy between content.\n */\n\nfunction Breadcrumb(props) {\n  var children = props.children,\n      className = props.className,\n      divider = props.divider,\n      icon = props.icon,\n      sections = props.sections,\n      size = props.size;\n  var classes = cx('ui', size, 'breadcrumb', className);\n  var rest = getUnhandledProps(Breadcrumb, props);\n  var ElementType = getElementType(Breadcrumb, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var childElements = [];\n\n  _each(sections, function (section, index) {\n    // section\n    var breadcrumbElement = BreadcrumbSection.create(section);\n    childElements.push(breadcrumbElement); // divider\n\n    if (index !== sections.length - 1) {\n      var key = \"\".concat(breadcrumbElement.key, \"_divider\") || JSON.stringify(section);\n      childElements.push(BreadcrumbDivider.create({\n        content: divider,\n        icon: icon,\n        key: key\n      }));\n    }\n  });\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childElements);\n}\n\nBreadcrumb.handledProps = [\"as\", \"children\", \"className\", \"divider\", \"icon\", \"sections\", \"size\"];\nBreadcrumb.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content of the Breadcrumb.Divider. */\n  divider: customPropTypes.every([customPropTypes.disallow(['icon']), customPropTypes.contentShorthand]),\n\n  /** For use with the sections prop. Render as an `Icon` component with `divider` class instead of a `div` in\n   *  Breadcrumb.Divider. */\n  icon: customPropTypes.every([customPropTypes.disallow(['divider']), customPropTypes.itemShorthand]),\n\n  /** Shorthand array of props for Breadcrumb.Section. */\n  sections: customPropTypes.collectionShorthand,\n\n  /** Size of Breadcrumb. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium'))\n} : {};\nBreadcrumb.Divider = BreadcrumbDivider;\nBreadcrumb.Section = BreadcrumbSection;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a description with one or more paragraphs.\n */\n\nfunction CardDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'description', className);\n  var rest = getUnhandledProps(CardDescription, props);\n  var ElementType = getElementType(CardDescription, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardDescription.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardDescription;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a header.\n */\n\nfunction CardHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(CardHeader, props);\n  var ElementType = getElementType(CardHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card header can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain content metadata.\n */\n\nfunction CardMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'meta', className);\n  var rest = getUnhandledProps(CardMeta, props);\n  var ElementType = getElementType(CardMeta, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card meta can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardMeta;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\nimport CardDescription from './CardDescription';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card can contain blocks of content or extra content meant to be formatted separately from the main content.\n */\n\nfunction CardContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      textAlign = props.textAlign;\n  var classes = cx(useKeyOnly(extra, 'extra'), useTextAlignProp(textAlign), 'content', className);\n  var rest = getUnhandledProps(CardContent, props);\n  var ElementType = getElementType(CardContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(CardHeader, function (val) {\n    return {\n      content: val\n    };\n  }, header, {\n    autoGenerateKey: false\n  }), createShorthand(CardMeta, function (val) {\n    return {\n      content: val\n    };\n  }, meta, {\n    autoGenerateKey: false\n  }), createShorthand(CardDescription, function (val) {\n    return {\n      content: val\n    };\n  }, description, {\n    autoGenerateKey: false\n  }));\n}\n\nCardContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"textAlign\"];\nCardContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** A card can contain extra content meant to be formatted separately from the main content. */\n  extra: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n/**\n * A group of cards.\n */\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  var itemsJSX = _map(items, function (item) {\n    var key = item.key || [item.header, item.description].join('-');\n    return React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nCardGroup.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"content\", \"doubling\", \"items\", \"itemsPerRow\", \"stackable\", \"textAlign\"];\nCardGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A group of cards can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n\n  /** A card group can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport Image from '../../elements/Image';\nimport CardContent from './CardContent';\nimport CardDescription from './CardDescription';\nimport CardGroup from './CardGroup';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card displays site content in a manner similar to a playing card.\n */\n\nvar Card =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Card, _Component);\n\n  function Card() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Card)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (e) {\n      var onClick = _this.props.onClick;\n      if (onClick) onClick(e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          centered = _this$props.centered,\n          children = _this$props.children,\n          className = _this$props.className,\n          color = _this$props.color,\n          content = _this$props.content,\n          description = _this$props.description,\n          extra = _this$props.extra,\n          fluid = _this$props.fluid,\n          header = _this$props.header,\n          href = _this$props.href,\n          image = _this$props.image,\n          link = _this$props.link,\n          meta = _this$props.meta,\n          onClick = _this$props.onClick,\n          raised = _this$props.raised;\n      var classes = cx('ui', color, useKeyOnly(centered, 'centered'), useKeyOnly(fluid, 'fluid'), useKeyOnly(link, 'link'), useKeyOnly(raised, 'raised'), 'card', className);\n      var rest = getUnhandledProps(Card, this.props);\n      var ElementType = getElementType(Card, this.props, function () {\n        if (onClick) return 'a';\n      });\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), children);\n      }\n\n      if (!childrenUtils.isNil(content)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), content);\n      }\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), Image.create(image, {\n        autoGenerateKey: false\n      }), (description || header || meta) && React.createElement(CardContent, {\n        description: description,\n        header: header,\n        meta: meta\n      }), extra && React.createElement(CardContent, {\n        extra: true\n      }, extra));\n    }\n  }]);\n\n  return Card;\n}(Component);\n\n_defineProperty(Card, \"Content\", CardContent);\n\n_defineProperty(Card, \"Description\", CardDescription);\n\n_defineProperty(Card, \"Group\", CardGroup);\n\n_defineProperty(Card, \"Header\", CardHeader);\n\n_defineProperty(Card, \"Meta\", CardMeta);\n\n_defineProperty(Card, \"handledProps\", [\"as\", \"centered\", \"children\", \"className\", \"color\", \"content\", \"description\", \"extra\", \"fluid\", \"header\", \"href\", \"image\", \"link\", \"meta\", \"onClick\", \"raised\"]);\n\nexport { Card as default };\nCard.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A Card can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A Card can be formatted to display different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for primary content of CardContent. */\n  extra: customPropTypes.contentShorthand,\n\n  /** A Card can be formatted to take up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n  href: PropTypes.string,\n\n  /** A card can contain an Image component. */\n  image: customPropTypes.itemShorthand,\n\n  /** A card can be formatted to link to other content. */\n  link: PropTypes.bool,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /**\n   * Called on click. When passed, the component renders as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A Card can be formatted to raise above the page. */\n  raised: PropTypes.bool\n} : {};"],"sourceRoot":""}